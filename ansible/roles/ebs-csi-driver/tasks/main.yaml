---

- name: Debug - Check if kubeconfig file exists
  stat:
    path: /home/ansible-user/.kube/config
  register: kubeconfig_check

- name: Debug - Print result of kubeconfig check
  debug:
    var: kubeconfig_check

- name: Fail if kubeconfig is missing
  fail:
    msg: "Kubeconfig file is missing at /home/ansible-user/.kube/config"
  when: kubeconfig_check.stat.exists == False

- name: Check if StorageClass gp2 exists
  command: "kubectl get storageclass gp2"
  register: storageclass_check
  environment:
    KUBECONFIG: "/home/ansible-user/.kube/config"
  failed_when: storageclass_check.rc not in [0, 1]
  changed_when: False

- name: Check if storageclass.yaml exists on the remote server
  stat:
    path: /tmp/storageclass.yaml
  register: storageclass_file_check

- name: Remove existing /tmp/storageclass.yaml if it exists
  file:
    path: /tmp/storageclass.yaml
    state: absent
  ignore_errors: yes

- name: Copy StorageClass template to remote if it does not exist
  template:
    src: "/home/ansible-user/singlenode/ansible/roles/ebs-csi-driver/templates/storageclass.yaml.j2"
    dest: /tmp/storageclass.yaml
  when: storageclass_file_check.stat.exists == False
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config

- name: Apply StorageClass if it does not exist
  command:
    cmd: kubectl apply -f /tmp/storageclass.yaml --kubeconfig /home/ansible-user/.kube/config
  when: storageclass_file_check.stat.exists == False
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config

# Check if PersistentVolumeClaim ebs-pvc exists
# Step 1: Check if the PersistentVolumeClaim exists
- name: Check if PersistentVolumeClaim exists
  command: kubectl get pvc ebs-pvc --kubeconfig /home/ansible-user/.kube/config
  register: pvc_check
  failed_when: false  # Ignore failures, we just want to check existence
  changed_when: false

- name: Debug output of pvc_check
  debug:
    var: pvc_check

- name: Create PersistentVolumeClaim if it does not exist
  command: kubectl apply -f /tmp/persistentvolumeclaim.yaml --kubeconfig /home/ansible-user/.kube/config
  when: pvc_check.rc != 0  # Only create if PVC does not exist
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config
  register: pvc_creation
  changed_when: true  # Mark as changed if PVC is created

- name: Debug output of pvc_creation
  debug:
    var: pvc_creation

# Step 3: Wait for PVC to be applied (if needed)
- name: Wait for PVC to be created (optional)
  pause:
    seconds: 5  # Adjust time if needed to allow Kubernetes to process

# Step 4: Verify PVC exists after creation
- name: Verify PersistentVolumeClaim exists after creation
  command: kubectl get pvc ebs-pvc --kubeconfig /home/ansible-user/.kube/config
  register: pvc_check_after_creation
  failed_when: false
  changed_when: false

- name: Debug output of pvc_check_after_creation
  debug:
    var: pvc_check_after_creation

